name: Minecraft Server Status Update

on:
  schedule:
    - cron: "*/5 * * * *"  
  workflow_dispatch:  

jobs:
  update_status:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code (Falls nötig)
        uses: actions/checkout@v3

      - name: Debugging - Installiere Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Überprüfe Minecraft-Serverstatus
        run: |
          echo "Überprüfe Minecraft Server Status..."

          # Server IP
          SERVER_IP="51.195.36.73"
          SERVER_PORT="25565"


          STATUS=$(echo | nc -zv $SERVER_IP $SERVER_PORT 2>&1 | grep -o succeeded || echo "failed")

          # Debug-Ausgabe des Status
          echo "Server Response: $STATUS"

          if [ "$STATUS" == "succeeded" ]; then
            INCIDENT_STATUS="resolved"
            MESSAGE="Minecraft Server is online."
            IMPACT="none"
          else
            INCIDENT_STATUS="investigating"
            MESSAGE="Minecraft Server is offline."
            IMPACT="critical"
          fi

          # Debugging: Variablen prüfen
          echo "Incident Status: $INCIDENT_STATUS"
          echo "Message: $MESSAGE"
          echo "Impact: $IMPACT"

          # Environment-Variablen setzen
          echo "INCIDENT_STATUS=$INCIDENT_STATUS" >> $GITHUB_ENV
          echo "MESSAGE=$MESSAGE" >> $GITHUB_ENV
          echo "IMPACT=$IMPACT" >> $GITHUB_ENV

      - name: Hole bestehende Vorfälle
        run: |
          echo "Hole bestehende Vorfälle für Minecraft-Server..."

          # API-Key aus den Secrets
          API_KEY="${{ secrets.INSTATUS_API_KEY }}"
          PAGE_ID="tmm"  # Beispielseite ID
          
          # Hole aktuelle Vorfälle
          INCIDENTS=$(curl -s -X GET "https://api.instatus.com/v1/pages/$PAGE_ID/incidents" -H "Authorization: Bearer $API_KEY")
          
          # Prüfe, ob der Vorfall existiert
          INCIDENT_ID=$(echo "$INCIDENTS" | jq -r '.data[0].id')  # ID des ersten Vorfalls (falls vorhanden)

          if [ "$INCIDENT_ID" == "null" ]; then
            echo "Kein Vorfall gefunden, erstelle neuen Vorfall..."
            INCIDENT_ID=""
          else
            echo "Vorfall gefunden, ID: $INCIDENT_ID"
          fi

      - name: Aktualisiere oder erstelle einen Vorfall
        run: |
          echo "Erstelle oder aktualisiere Vorfall..."

          # API-Key aus den Secrets
          API_KEY="${{ secrets.INSTATUS_API_KEY }}"
          PAGE_ID="tmm"
          
          if [ -z "$INCIDENT_ID" ]; then
            # Erstelle einen neuen Vorfall
            curl -s -X POST "https://api.instatus.com/v1/pages/$PAGE_ID/incidents" \
              -H "Authorization: Bearer $API_KEY" \
              -H "Content-Type: application/json" \
              -d '{
                "name": "Minecraft Server Status",
                "message": "'"$MESSAGE"'",
                "components": ["minecraft-server"],
                "status": "'"$INCIDENT_STATUS"'",
                "notify": true
              }'
          else
            # Aktualisiere den Vorfall
            curl -s -X POST "https://api.instatus.com/v1/pages/$PAGE_ID/incidents/$INCIDENT_ID/incident-updates" \
              -H "Authorization: Bearer $API_KEY" \
              -H "Content-Type: application/json" \
              -d '{
                "message": "'"$MESSAGE"'",
                "status": "'"$INCIDENT_STATUS"'",
                "notify": true
              }'
          fi

          echo "Vorfall erfolgreich erstellt oder aktualisiert."
